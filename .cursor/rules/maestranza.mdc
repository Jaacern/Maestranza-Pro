---
description: 
globs: 
alwaysApply: true
---
# .cursorrules

# 1. Estructura de carpetas
folders:
  type: always
  pages: "Contendrá únicamente archivos .astro o .js que representen rutas del sitio"
  components: "Componentes UI reutilizables en PascalCase"
  services: "Lógica de negocio y llamadas a API"
  layouts: "Plantillas globales y estructura de página"
  data: "Mocks y datos estáticos"
  types: "Definiciones de TypeScript"

# 2. Nomenclatura de archivos
naming:
  type: always
  pages: "PascalCase. Ej: InventoryRegistration.astro, LowStockAlerts.astro"
  components: "PascalCase con sufijo Component. Ej: NavBarComponent.astro"
  services: "camelCase. Ej: inventoryService.js"

# 3. Rutas permitidas y dinámicas
routes:
  type: always
  pattern: "^/(dashboard|inventory-registration|inventory-movement|low-stock-alerts|suppliers-management|purchase-history|batch-control|kits-management|inventory-reports|energy-supply-control|inventory-tracking|inventory-threshold-notifications|inventory-categorization|purchase-integration|login)/?$"
  errorMessage: "La ruta debe coincidir con las funcionalidades definidas o con /login."
dynamicPages:
  type: always
  rule: "Si un botón o enlace apunta a una ruta no existente, crear automáticamente la página con la nomenclatura PascalCase."

# 4. Calidad de código
lint:
  type: manual
  eslint: true
  rules:
    max-len: ["error", { "code": 120 }]
    no-console: "warn"

# 5. Seguridad, autenticación y roles
authentication:
  type: always
  loginPage: "/login"
  guards:
    - path: "/**"
      requireAuth: true
  roles:
    - name: Administrador
      redirectAfterLogin: "/DashboardAdmin"
    - name: GestorInventario
      redirectAfterLogin: "/DashboardGestor"
    - name: Comprador
      redirectAfterLogin: "/DashboardComprador"
    - name: EncargadoLogistica
      redirectAfterLogin: "/DashboardLogistica"
    - name: AuditorInventario
      redirectAfterLogin: "/DashboardAuditor"
    - name: JefeProduccion
      redirectAfterLogin: "/DashboardProduccion"
    - name: GerenteProyectos
      redirectAfterLogin: "/DashboardProyectos"
    - name: UsuarioFinal
      redirectAfterLogin: "/DashboardUsuario"
  rolesAllowed:
    "/DashboardAdmin": ["Administrador"]
    "/DashboardGestor": ["GestorInventario"]
    "/DashboardComprador": ["Comprador"]
    "/DashboardLogistica": ["EncargadoLogistica"]
    "/DashboardAuditor": ["AuditorInventario"]
    "/DashboardProduccion": ["JefeProduccion"]
    "/DashboardProyectos": ["GerenteProyectos"]
    "/DashboardUsuario": ["UsuarioFinal"]
    "/inventory-registration": ["Administrador", "GestorInventario", "UsuarioFinal"]
    "/inventory-movement": ["Administrador", "GestorInventario"]
    "/low-stock-alerts": ["Administrador", "GestorInventario"]
    "/suppliers-management": ["Administrador", "Comprador"]
    "/purchase-history": ["Administrador", "Comprador"]
    "/batch-control": ["Administrador", "GestorInventario"]
    "/kits-management": ["Administrador", "JefeProduccion"]
    "/inventory-reports": ["Administrador", "AuditorInventario"]
    "/energy-supply-control": ["Administrador"]
    "/inventory-tracking": ["Administrador", "EncargadoLogistica"]
    "/inventory-threshold-notifications": ["Administrador", "GestorInventario"]
    "/inventory-categorization": ["Administrador", "GestorInventario"]
    "/purchase-integration": ["Administrador", "GerenteProyectos"]

# 6. Tests
testing:
  type: auto_attached
  unit:
    pattern: "src/**/*.(test|spec).{js,ts,astro}"
  integration:
    pattern: "tests/integration/**"

# 7. Documentación
docs:
  type: manual
  requireJsDoc: true
  includeExamples: true

# 8. No duplicar archivos
noDuplication:
  type: always
  enabled: true

# 9. Dashboards por rol
roleDashboards:
  type: agent_request
  roles:
    Administrador: "DashboardAdmin.astro"
    GestorInventario: "DashboardGestor.astro"
    Comprador: "DashboardComprador.astro"
    EncargadoLogistica: "DashboardLogistica.astro"
    AuditorInventario: "DashboardAuditor.astro"
    JefeProduccion: "DashboardProduccion.astro"
    GerenteProyectos: "DashboardProyectos.astro"
    UsuarioFinal: "DashboardUsuario.astro"
  rule: |
    Al recibir un prompt con type: agent_request y tema 'roleDashboards',
    revisar en src/pages/ si existen esas plantillas. Si faltan, crearlas
    con un esqueleto que importe LayoutSidebar y muestre un título específico para cada rol.

# 10. Documentación Ágil
agileDocs:
  type: agent_request
  files:
    - path: "src/docs/BACKLOG.md"
      template: "backlog"
    - path: "src/docs/ROLES.md"
      template: "roles"
    - path: "src/docs/MVP.md"
      template: "mvp"
    - path: "src/docs/DEMO_PLAN.md"
      template: "demoPlan"
  rule: |
    Cuando se reciba un prompt con type: agent_request y tema 'agileDocs',
    generar o actualizar cada archivo con contenido completo según su template.

