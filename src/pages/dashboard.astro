---
import DashboardLayout from '../layouts/DashboardLayout.astro';
import InventoryChart from '../components/InventoryChart.astro';
import StockStatusChart from '../components/StockStatusChart.astro';
import { getProducts } from '../services/products.ts';
import { getUsers } from '../services/users.ts';
import { getSuppliers } from '../services/suppliers.ts';

// Obtener datos
const products = await getProducts();
const users = await getUsers();
const suppliers = await getSuppliers();

// Calcular estadísticas
const totalProducts = products.length;
const totalUsers = users.length;
const totalSuppliers = suppliers.length;

// Calcular distribución por categorías
const categories = {};
products.forEach(product => {
    const category = product.category || 'Sin categoría';
    categories[category] = (categories[category] || 0) + 1;
});

// Preparar datos para el gráfico
const chartLabels = Object.keys(categories);
const chartData = Object.values(categories);
const chartColors = [
    '#3B82F6', '#10B981', '#F59E0B', '#EF4444', 
    '#8B5CF6', '#06B6D4', '#84CC16', '#F97316'
];

// Calcular stock bajo
const lowStockItems = products.filter(p => p.stock < (p.stockmin || 10)).length;

// Calcular valor total del inventario
const totalValue = products.reduce((sum, p) => {
    const price = parseFloat(p.price?.replace(/[$,]/g, '') || '0');
    return sum + (price * p.stock);
}, 0);

// Preparar datos para el script
const dashboardData = {
    chartLabels: chartLabels,
    chartData: chartData,
    chartColors: chartColors
};
---

<DashboardLayout>
    <div class="p-6">
        <!-- Header -->
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Dashboard Principal</h1>
            <p class="text-gray-600 dark:text-gray-400 mt-2">Panel de control del sistema Maestranza Pro</p>
        </div>
        
        <!-- Estadísticas principales -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
            <div class="bg-white p-6 rounded-lg shadow border dark:bg-gray-800 dark:border-gray-700">
                <div class="flex items-center">
                    <div class="p-3 rounded-full bg-blue-100 dark:bg-blue-900">
                        <svg class="w-6 h-6 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
                        </svg>
                    </div>
                    <div class="ml-4">
                        <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Productos</h3>
                        <p class="text-3xl font-bold text-blue-600 dark:text-blue-400">{totalProducts}</p>
                    </div>
                </div>
            </div>
            
            <div class="bg-white p-6 rounded-lg shadow border dark:bg-gray-800 dark:border-gray-700">
                <div class="flex items-center">
                    <div class="p-3 rounded-full bg-green-100 dark:bg-green-900">
                        <svg class="w-6 h-6 text-green-600 dark:text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
                        </svg>
                    </div>
                    <div class="ml-4">
                        <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Usuarios</h3>
                        <p class="text-3xl font-bold text-green-600 dark:text-green-400">{totalUsers}</p>
                    </div>
                </div>
            </div>
            
            <div class="bg-white p-6 rounded-lg shadow border dark:bg-gray-800 dark:border-gray-700">
                <div class="flex items-center">
                    <div class="p-3 rounded-full bg-purple-100 dark:bg-purple-900">
                        <svg class="w-6 h-6 text-purple-600 dark:text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                        </svg>
                    </div>
                    <div class="ml-4">
                        <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Proveedores</h3>
                        <p class="text-3xl font-bold text-purple-600 dark:text-purple-400">{totalSuppliers}</p>
                    </div>
                </div>
            </div>
            
            <div class="bg-white p-6 rounded-lg shadow border dark:bg-gray-800 dark:border-gray-700">
                <div class="flex items-center">
                    <div class="p-3 rounded-full bg-red-100 dark:bg-red-900">
                        <svg class="w-6 h-6 text-red-600 dark:text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                        </svg>
                    </div>
                    <div class="ml-4">
                        <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Stock Bajo</h3>
                        <p class="text-3xl font-bold text-red-600 dark:text-red-400">{lowStockItems}</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Gráficos principales -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
            <!-- Gráfico de distribución por categorías -->
            <div class="bg-white p-6 rounded-lg shadow border dark:bg-gray-800 dark:border-gray-700">
                <div class="flex items-center justify-between mb-4">
                    <div>
                        <h3 class="text-xl font-bold text-gray-900 dark:text-white">Distribución por Categorías</h3>
                        <p class="text-gray-600 dark:text-gray-400">Productos por categoría</p>
                    </div>
                </div>
                <div class="h-80">
                    <canvas id="categoryChart"></canvas>
                </div>
            </div>

            <!-- Gráfico de estado del stock -->
            <StockStatusChart products={products} />
        </div>

        <!-- Gráfico de evolución -->
        <div class="mb-8">
            <InventoryChart products={products} />
        </div>

        <!-- Gráfico de valor por categoría -->
        <div class="mb-8">
            <div class="bg-white p-6 rounded-lg shadow border dark:bg-gray-800 dark:border-gray-700">
                <div class="flex items-center justify-between mb-4">
                    <div>
                        <h3 class="text-xl font-bold text-gray-900 dark:text-white">Valor por Categoría</h3>
                        <p class="text-gray-600 dark:text-gray-400">Valor total del inventario</p>
                    </div>
                </div>
                <div class="h-80">
                    <canvas id="valueChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Información adicional -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="bg-white p-6 rounded-lg shadow border dark:bg-gray-800 dark:border-gray-700">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Resumen Financiero</h3>
                <div class="space-y-3">
                    <div class="flex justify-between">
                        <span class="text-gray-600 dark:text-gray-400">Valor Total del Inventario:</span>
                        <span class="font-semibold text-gray-900 dark:text-white">${totalValue.toLocaleString('es-CL')}</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-600 dark:text-gray-400">Productos con Stock Bajo:</span>
                        <span class="font-semibold text-red-600">{lowStockItems}</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-600 dark:text-gray-400">Categorías Activas:</span>
                        <span class="font-semibold text-gray-900 dark:text-white">{chartLabels.length}</span>
                    </div>
                </div>
            </div>
            
            <div class="bg-white p-6 rounded-lg shadow border dark:bg-gray-800 dark:border-gray-700">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Acciones Rápidas</h3>
                <div class="space-y-2">
                    <a href="/InventoryRegistration" class="block text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">Gestionar Productos</a>
                    <a href="/InventoryRegistration" class="block text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">Registrar Nuevo Producto</a>
                    <a href="/SuppliersManagement" class="block text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">Gestionar Proveedores</a>
                    <a href="/InventoryReports" class="block text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">Ver Reportes</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Chart.js -->
    <script type="module" define:vars={{ dashboardData }}>
        import Chart from 'chart.js/auto';
        
        window.addEventListener('DOMContentLoaded', () => {
            // Datos para los gráficos
            const { chartLabels, chartData, chartColors } = dashboardData;
            console.log('dashboardData', dashboardData);

            // Gráfico de distribución por categorías
            const categoryCtx = document.getElementById('categoryChart');
            if (categoryCtx) {
                if (!chartLabels.length || !chartData.length) {
                    console.warn('No hay datos para el gráfico de categorías');
                } else {
                    new Chart(categoryCtx, {
                        type: 'doughnut',
                        data: {
                            labels: chartLabels,
                            datasets: [{
                                data: chartData,
                                backgroundColor: chartColors,
                                borderWidth: 2,
                                borderColor: '#ffffff'
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    position: 'bottom',
                                    labels: {
                                        padding: 20,
                                        usePointStyle: true
                                    }
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            const label = context.label || '';
                                            const value = context.parsed;
                                            const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                            const percentage = ((value / total) * 100).toFixed(1);
                                            return `${label}: ${value} (${percentage}%)`;
                                        }
                                    }
                                }
                            }
                        }
                    });
                }
            }

            // Gráfico de barras para valor por categoría
            const valueCtx = document.getElementById('valueChart');
            if (valueCtx) {
                if (!chartLabels.length || !chartData.length) {
                    console.warn('No hay datos para el gráfico de valor por categoría');
                } else {
                    new Chart(valueCtx, {
                        type: 'bar',
                        data: {
                            labels: chartLabels,
                            datasets: [{
                                label: 'Cantidad de Productos',
                                data: chartData,
                                backgroundColor: chartColors.map(color => color + '80'),
                                borderColor: chartColors,
                                borderWidth: 2,
                                borderRadius: 5
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        stepSize: 1
                                    }
                                }
                            }
                        }
                    });
                }
            }
        });
    </script>
</DashboardLayout>
