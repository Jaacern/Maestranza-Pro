---
import LayoutSidebar from '../../app/LayoutSidebar.astro';
import { fetchData } from '../../lib/data.ts';

const products = await fetchData('products');
const lowStockItems = products.filter(p => p.stock < p.stockmin);
const expiringItems = products.filter(p => {
    const expiryDate = new Date(p.vencimiento);
    const today = new Date();
    const daysUntilExpiry = Math.ceil((expiryDate - today) / (1000 * 60 * 60 * 24));
    return (daysUntilExpiry <= 30) && (daysUntilExpiry > 0);
});
---

<LayoutSidebar>
	<div class="px-4 pt-6">
		<!-- Header -->
		<div class="mb-6">
			<nav class="flex mb-5" aria-label="Breadcrumb">
				<ol class="inline-flex items-center space-x-1 text-sm font-medium md:space-x-2">
					<li class="inline-flex items-center">
						<a href="/" class="inline-flex items-center text-gray-700 hover:text-primary-600 dark:text-gray-300 dark:hover:text-white">
							<svg class="w-5 h-5 mr-2.5" fill="currentColor" viewBox="0 0 20 20">
								<path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"/>
							</svg>
							Inicio
						</a>
					</li>
					<li>
						<div class="flex items-center">
							<svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
								<path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
							</svg>
							<a href="/inventory" class="ml-1 text-gray-700 hover:text-primary-600 md:ml-2 dark:text-gray-300 dark:hover:text-white">Inventario</a>
						</div>
					</li>
					<li>
						<div class="flex items-center">
							<svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
								<path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
							</svg>
							<span class="ml-1 text-gray-400 md:ml-2 dark:text-gray-500">Alertas</span>
						</div>
					</li>
				</ol>
			</nav>
			<h1 class="text-2xl font-bold text-gray-900 dark:text-white">
				Alertas de Inventario
			</h1>
			<p class="text-gray-600 dark:text-gray-400">
				Monitoreo de stock bajo y artículos próximos a vencer
			</p>
		</div>

		<!-- Resumen de Alertas -->
		<div class="grid grid-cols-1 gap-4 mb-6 sm:grid-cols-2 lg:grid-cols-4">
			<div class="p-4 bg-red-50 border border-red-200 rounded-lg dark:bg-red-900 dark:border-red-700">
				<div class="flex items-center">
					<div class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-red-600 bg-red-100 rounded-lg dark:bg-red-800 dark:text-red-200">
						<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
							<path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
						</svg>
					</div>
					<div class="ml-4">
						<span class="text-2xl font-bold leading-none text-red-800 dark:text-red-200">
							{lowStockItems.length}
						</span>
						<p class="text-base font-normal text-red-600 dark:text-red-400">
							Stock Bajo
						</p>
					</div>
				</div>
			</div>

			<div class="p-4 bg-yellow-50 border border-yellow-200 rounded-lg dark:bg-yellow-900 dark:border-yellow-700">
				<div class="flex items-center">
					<div class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-yellow-600 bg-yellow-100 rounded-lg dark:bg-yellow-800 dark:text-yellow-200">
						<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
							<path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
						</svg>
					</div>
					<div class="ml-4">
						<span class="text-2xl font-bold leading-none text-yellow-800 dark:text-yellow-200">
							{expiringItems.length}
						</span>
						<p class="text-base font-normal text-yellow-600 dark:text-yellow-400">
							Próximos a Vencer
						</p>
					</div>
				</div>
			</div>

			<div class="p-4 bg-blue-50 border border-blue-200 rounded-lg dark:bg-blue-900 dark:border-blue-700">
				<div class="flex items-center">
					<div class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-blue-600 bg-blue-100 rounded-lg dark:bg-blue-800 dark:text-blue-200">
						<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
							<path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"/>
						</svg>
					</div>
					<div class="ml-4">
						<span class="text-2xl font-bold leading-none text-blue-800 dark:text-blue-200">
							{lowStockItems.length + expiringItems.length}
						</span>
						<p class="text-base font-normal text-blue-600 dark:text-blue-400">
							Total Alertas
						</p>
					</div>
				</div>
			</div>

			<div class="p-4 bg-green-50 border border-green-200 rounded-lg dark:bg-green-900 dark:border-green-700">
				<div class="flex items-center">
					<div class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-green-600 bg-green-100 rounded-lg dark:bg-green-800 dark:text-green-200">
						<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
							<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
						</svg>
					</div>
					<div class="ml-4">
						<span class="text-2xl font-bold leading-none text-green-800 dark:text-green-200">
							{products.length - lowStockItems.length - expiringItems.length}
						</span>
						<p class="text-base font-normal text-green-600 dark:text-green-400">
							Sin Alertas
						</p>
					</div>
				</div>
			</div>
		</div>

		<!-- Alertas de Stock Bajo -->
		<div class="mb-8 bg-white border border-gray-200 rounded-lg shadow-sm dark:border-gray-700 dark:bg-gray-800">
			<div class="p-6">
				<div class="flex items-center justify-between mb-4">
					<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
						Stock Bajo - Requiere Reposición
					</h3>
					<a href="/inventory/register" class="text-sm font-medium text-blue-600 hover:underline dark:text-blue-500">
						Registrar Nuevo Artículo
					</a>
				</div>
				
				{lowStockItems.length > 0 ? (
					<div class="overflow-x-auto">
						<table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
							<thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
								<tr>
									<th scope="col" class="px-6 py-3">Artículo</th>
									<th scope="col" class="px-6 py-3">Categoría</th>
									<th scope="col" class="px-6 py-3">Stock Actual</th>
									<th scope="col" class="px-6 py-3">Stock Mínimo</th>
									<th scope="col" class="px-6 py-3">Déficit</th>
									<th scope="col" class="px-6 py-3">Proveedor</th>
									<th scope="col" class="px-6 py-3">Acciones</th>
								</tr>
							</thead>
							<tbody>
								{lowStockItems.map((item) => (
									<tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
										<td class="px-6 py-4 font-medium text-gray-900 dark:text-white">
											{item.name}
										</td>
										<td class="px-6 py-4">{item.category}</td>
										<td class="px-6 py-4">
											<span class="inline-flex items-center px-2 py-1 text-xs font-semibold text-red-800 bg-red-200 rounded dark:bg-red-700 dark:text-red-100">
												{item.stock}
											</span>
										</td>
										<td class="px-6 py-4">{item.stockmin}</td>
										<td class="px-6 py-4">
											<span class="inline-flex items-center px-2 py-1 text-xs font-semibold text-red-800 bg-red-200 rounded dark:bg-red-700 dark:text-red-100">
												{item.stockmin - item.stock}
											</span>
										</td>
										<td class="px-6 py-4">{item.proveedor}</td>
										<td class="px-6 py-4">
											<button class="text-blue-600 hover:text-blue-900 dark:text-blue-500 dark:hover:text-blue-400">
												Solicitar Compra
											</button>
										</td>
									</tr>
								))}
							</tbody>
						</table>
					</div>
				) : (
					<div class="text-center py-8">
						<svg class="w-16 h-16 mx-auto text-green-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
						</svg>
						<p class="text-gray-500 dark:text-gray-400">No hay artículos con stock bajo</p>
					</div>
				)}
			</div>
		</div>

		<!-- Alertas de Vencimiento -->
		<div class="bg-white border border-gray-200 rounded-lg shadow-sm dark:border-gray-700 dark:bg-gray-800">
			<div class="p-6">
				<div class="flex items-center justify-between mb-4">
					<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
						Artículos Próximos a Vencer (30 días)
					</h3>
					<a href="/inventory/batch-control" class="text-sm font-medium text-blue-600 hover:underline dark:text-blue-500">
						Control de Lotes
					</a>
				</div>
				
				{expiringItems.length > 0 ? (
					<div class="overflow-x-auto">
						<table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
							<thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
								<tr>
									<th scope="col" class="px-6 py-3">Artículo</th>
									<th scope="col" class="px-6 py-3">Lote</th>
									<th scope="col" class="px-6 py-3">Fecha Vencimiento</th>
									<th scope="col" class="px-6 py-3">Días Restantes</th>
									<th scope="col" class="px-6 py-3">Stock</th>
									<th scope="col" class="px-6 py-3">Acciones</th>
								</tr>
							</thead>
							<tbody>
								{expiringItems.map((item) => {
									const expiryDate = new Date(item.vencimiento);
									const today = new Date();
									const daysUntilExpiry = Math.ceil((expiryDate - today) / (1000 * 60 * 60 * 24));
									
									return (
										<tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
											<td class="px-6 py-4 font-medium text-gray-900 dark:text-white">
												{item.name}
											</td>
											<td class="px-6 py-4">{item.lote}</td>
											<td class="px-6 py-4">{new Date(item.vencimiento).toLocaleDateString('es-CL')}</td>
											<td class="px-6 py-4">
												<span class={`inline-flex items-center px-2 py-1 text-xs font-semibold rounded ${
													daysUntilExpiry <= 7 
														? 'text-red-800 bg-red-200 dark:bg-red-700 dark:text-red-100'
														: 'text-yellow-800 bg-yellow-200 dark:bg-yellow-700 dark:text-yellow-100'
												}`}>
													{daysUntilExpiry} días
												</span>
											</td>
											<td class="px-6 py-4">{item.stock}</td>
											<td class="px-6 py-4">
												<button class="text-blue-600 hover:text-blue-900 dark:text-blue-500 dark:hover:text-blue-400 mr-2">
													Usar Primero
												</button>
												<button class="text-red-600 hover:text-red-900 dark:text-red-500 dark:hover:text-red-400">
													Descartar
												</button>
											</td>
										</tr>
									);
								})}
							</tbody>
						</table>
					</div>
				) : (
					<div class="text-center py-8">
						<svg class="w-16 h-16 mx-auto text-green-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
						</svg>
						<p class="text-gray-500 dark:text-gray-400">No hay artículos próximos a vencer</p>
					</div>
				)}
			</div>
		</div>
	</div>
</LayoutSidebar> 