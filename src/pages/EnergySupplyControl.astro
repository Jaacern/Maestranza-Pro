---
import LayoutSidebar from '../app/LayoutSidebar.astro';

// Datos de ejemplo para control de energía
const energySupplies = [
	{
		id: 1,
		name: "UPS Principal - Sala de Servidores",
		type: "UPS",
		capacity: "5000VA",
		status: "operativo",
		batteryLevel: 85,
		load: 65,
		location: "Sala de Servidores - Piso 1",
		lastMaintenance: "2024-01-10",
		nextMaintenance: "2024-04-10"
	},
	{
		id: 2,
		name: "Generador Diesel - Planta Principal",
		type: "Generador",
		capacity: "100kW",
		status: "standby",
		fuelLevel: 75,
		load: 0,
		location: "Planta Principal - Exterior",
		lastMaintenance: "2024-01-15",
		nextMaintenance: "2024-04-15"
	},
	{
		id: 3,
		name: "UPS Secundario - Oficinas",
		type: "UPS",
		capacity: "2000VA",
		status: "operativo",
		batteryLevel: 92,
		load: 45,
		location: "Oficinas - Piso 2",
		lastMaintenance: "2024-01-05",
		nextMaintenance: "2024-04-05"
	},
	{
		id: 4,
		name: "Sistema Solar - Techado",
		type: "Solar",
		capacity: "50kW",
		status: "operativo",
		batteryLevel: 78,
		load: 30,
		location: "Techado - Planta Principal",
		lastMaintenance: "2024-01-20",
		nextMaintenance: "2024-04-20"
	},
	{
		id: 5,
		name: "Baterías de Respaldo - Bodega",
		type: "Baterías",
		capacity: "1000Ah",
		status: "operativo",
		batteryLevel: 88,
		load: 20,
		location: "Bodega Principal - Estante E1",
		lastMaintenance: "2024-01-12",
		nextMaintenance: "2024-04-12"
	}
];

const totalSupplies = energySupplies.length;
const operationalSupplies = energySupplies.filter(s => s.status === 'operativo').length;
const averageBatteryLevel = Math.round(energySupplies.reduce((sum, s) => sum + s.batteryLevel, 0) / energySupplies.length);
---

<LayoutSidebar>
	<div class="px-4 pt-6">
		<div class="mb-6">
			<h1 class="text-2xl font-bold text-gray-900 dark:text-white">
				Control de Suministro de Energía
			</h1>
			<p class="text-gray-600 dark:text-gray-400">
				Monitoreo y gestión de sistemas de respaldo de energía para continuidad operacional
			</p>
		</div>

		<!-- Métricas de Energía -->
		<div class="grid gap-4 xl:grid-cols-2 2xl:grid-cols-4 mb-6">
			<div class="p-4 bg-white border border-gray-200 rounded-lg shadow-sm dark:border-gray-700 dark:bg-gray-800">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<svg class="w-8 h-8 text-blue-600 dark:text-blue-500" fill="currentColor" viewBox="0 0 20 20">
							<path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd"></path>
						</svg>
					</div>
					<div class="ml-4">
						<p class="text-sm font-medium text-gray-500 dark:text-gray-400">Total Sistemas</p>
						<p class="text-2xl font-bold text-gray-900 dark:text-white">{totalSupplies}</p>
					</div>
				</div>
			</div>

			<div class="p-4 bg-white border border-gray-200 rounded-lg shadow-sm dark:border-gray-700 dark:bg-gray-800">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<svg class="w-8 h-8 text-green-600 dark:text-green-500" fill="currentColor" viewBox="0 0 20 20">
							<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
						</svg>
					</div>
					<div class="ml-4">
						<p class="text-sm font-medium text-gray-500 dark:text-gray-400">Operativos</p>
						<p class="text-2xl font-bold text-gray-900 dark:text-white">{operationalSupplies}</p>
					</div>
				</div>
			</div>

			<div class="p-4 bg-white border border-gray-200 rounded-lg shadow-sm dark:border-gray-700 dark:bg-gray-800">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<svg class="w-8 h-8 text-yellow-600 dark:text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
							<path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
						</svg>
					</div>
					<div class="ml-4">
						<p class="text-sm font-medium text-gray-500 dark:text-gray-400">Batería Promedio</p>
						<p class="text-2xl font-bold text-gray-900 dark:text-white">{averageBatteryLevel}%</p>
					</div>
				</div>
			</div>

			<div class="p-4 bg-white border border-gray-200 rounded-lg shadow-sm dark:border-gray-700 dark:bg-gray-800">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<svg class="w-8 h-8 text-purple-600 dark:text-purple-500" fill="currentColor" viewBox="0 0 20 20">
							<path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z" clip-rule="evenodd"></path>
						</svg>
					</div>
					<div class="ml-4">
						<p class="text-sm font-medium text-gray-500 dark:text-gray-400">Tipos</p>
						<p class="text-2xl font-bold text-gray-900 dark:text-white">
							{new Set(energySupplies.map(s => s.type)).size}
						</p>
					</div>
				</div>
			</div>
		</div>

		<!-- Estado de Sistemas -->
		<div class="grid gap-6 md:grid-cols-2 mb-6">
			<!-- Sistemas Críticos -->
			<div class="p-6 bg-white border border-gray-200 rounded-lg shadow-sm dark:border-gray-700 dark:bg-gray-800">
				<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
					Sistemas Críticos
				</h3>
				<div class="space-y-4">
					{energySupplies.filter(s => s.type === 'UPS' || s.type === 'Generador').map(supply => (
						<div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg dark:bg-gray-700">
							<div class="flex items-center">
								<div class={`w-3 h-3 rounded-full mr-3 ${
									supply.status === 'operativo' ? 'bg-green-500' :
									supply.status === 'standby' ? 'bg-yellow-500' :
									'bg-red-500'
								}`}></div>
								<div>
									<p class="font-medium text-gray-900 dark:text-white">{supply.name}</p>
									<p class="text-sm text-gray-500 dark:text-gray-400">{supply.capacity}</p>
								</div>
							</div>
							<div class="text-right">
								<p class="text-sm font-medium text-gray-900 dark:text-white">
									{supply.batteryLevel || supply.fuelLevel}%
								</p>
								<p class="text-xs text-gray-500 dark:text-gray-400">
									{supply.status.charAt(0).toUpperCase() + supply.status.slice(1)}
								</p>
							</div>
						</div>
					))}
				</div>
			</div>

			<!-- Alertas de Mantenimiento -->
			<div class="p-6 bg-white border border-gray-200 rounded-lg shadow-sm dark:border-gray-700 dark:bg-gray-800">
				<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
					Próximos Mantenimientos
				</h3>
				<div class="space-y-4">
					{energySupplies
						.filter(s => {
							const nextMaintenance = new Date(s.nextMaintenance);
							const today = new Date();
							const daysUntil = Math.ceil((nextMaintenance - today) / (1000 * 60 * 60 * 24));
							return daysUntil <= 30;
						})
						.map(supply => {
							const nextMaintenance = new Date(supply.nextMaintenance);
							const today = new Date();
							const daysUntil = Math.ceil((nextMaintenance - today) / (1000 * 60 * 60 * 24));
							
							return (
								<div class={`flex items-center justify-between p-3 rounded-lg ${
									daysUntil <= 7 ? 'bg-red-50 dark:bg-red-900/20' :
									daysUntil <= 14 ? 'bg-orange-50 dark:bg-orange-900/20' :
									'bg-yellow-50 dark:bg-yellow-900/20'
								}`}>
									<div>
										<p class="font-medium text-gray-900 dark:text-white">{supply.name}</p>
										<p class="text-sm text-gray-500 dark:text-gray-400">
											Mantenimiento programado
										</p>
									</div>
									<div class="text-right">
										<p class={`text-sm font-medium ${
											daysUntil <= 7 ? 'text-red-600 dark:text-red-400' :
											daysUntil <= 14 ? 'text-orange-600 dark:text-orange-400' :
											'text-yellow-600 dark:text-yellow-400'
										}`}>
											{daysUntil} días
										</p>
										<p class="text-xs text-gray-500 dark:text-gray-400">
											{new Date(supply.nextMaintenance).toLocaleDateString()}
										</p>
									</div>
								</div>
							);
						})}
				</div>
			</div>
		</div>

		<!-- Tabla de Sistemas -->
		<div class="bg-white border border-gray-200 rounded-lg shadow-sm dark:border-gray-700 dark:bg-gray-800">
			<div class="p-4 border-b border-gray-200 dark:border-gray-700">
				<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
					Estado Detallado de Sistemas
				</h3>
			</div>
			<div class="overflow-x-auto">
				<table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
					<thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
						<tr>
							<th scope="col" class="px-6 py-3">Sistema</th>
							<th scope="col" class="px-6 py-3">Tipo</th>
							<th scope="col" class="px-6 py-3">Capacidad</th>
							<th scope="col" class="px-6 py-3">Estado</th>
							<th scope="col" class="px-6 py-3">Nivel</th>
							<th scope="col" class="px-6 py-3">Carga</th>
							<th scope="col" class="px-6 py-3">Ubicación</th>
							<th scope="col" class="px-6 py-3">Próximo Mant.</th>
							<th scope="col" class="px-6 py-3">Acciones</th>
						</tr>
					</thead>
					<tbody>
						{energySupplies.map(supply => (
							<tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700">
								<td class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
									{supply.name}
								</td>
								<td class="px-6 py-4">
									<span class="px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded-full dark:bg-blue-900 dark:text-blue-300">
										{supply.type}
									</span>
								</td>
								<td class="px-6 py-4">{supply.capacity}</td>
								<td class="px-6 py-4">
									<span class={`px-2 py-1 text-xs font-medium rounded-full ${
										supply.status === 'operativo' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300' :
										supply.status === 'standby' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300' :
										'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300'
									}`}>
										{supply.status.charAt(0).toUpperCase() + supply.status.slice(1)}
									</span>
								</td>
								<td class="px-6 py-4">
									<div class="flex items-center">
										<div class="w-16 bg-gray-200 rounded-full h-2 mr-2 dark:bg-gray-700">
											<div class={`h-2 rounded-full ${
												supply.batteryLevel || supply.fuelLevel > 80 ? 'bg-green-600' :
												supply.batteryLevel || supply.fuelLevel > 50 ? 'bg-yellow-600' :
												'bg-red-600'
											}`} style={`width: ${supply.batteryLevel || supply.fuelLevel}%`}></div>
										</div>
										<span class="text-sm font-medium">{(supply.batteryLevel || supply.fuelLevel)}%</span>
									</div>
								</td>
								<td class="px-6 py-4">{supply.load}%</td>
								<td class="px-6 py-4">{supply.location}</td>
								<td class="px-6 py-4">{new Date(supply.nextMaintenance).toLocaleDateString()}</td>
								<td class="px-6 py-4">
									<button class="text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300 mr-2">
										<svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
											<path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
											<path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"></path>
										</svg>
									</button>
									<button class="text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300">
										<svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
											<path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"></path>
										</svg>
									</button>
								</td>
							</tr>
						))}
					</tbody>
				</table>
			</div>
		</div>

		<!-- Botones de Acción -->
		<div class="mt-6 flex gap-4">
			<button class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 focus:ring-4 focus:ring-green-300 flex items-center">
				<svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
					<path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd"></path>
				</svg>
				Nuevo Sistema
			</button>
			<button class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:ring-4 focus:ring-blue-300 flex items-center">
				<svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
					<path fill-rule="evenodd" d="M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm2 6a1 1 0 000 2h4a1 1 0 100-2H8zm-1 5a1 1 0 011-1h3a1 1 0 110 2H9a1 1 0 01-1-1z" clip-rule="evenodd"></path>
				</svg>
				Generar Reporte
			</button>
			<button class="px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 focus:ring-4 focus:ring-yellow-300 flex items-center">
				<svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
					<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"></path>
				</svg>
				Programar Mantenimiento
			</button>
		</div>
	</div>
</LayoutSidebar> 